1.Accessing Characters: You can access individual characters in a string using the subscript operator [] or the at() member function. 
Remember that C++ strings are zero-indexed.

std::string myString = "Hello";
char firstChar = myString[0];       // Access the first character ('H')
char secondChar = myString.at(1);   // Access the second character ('e')

2.Modifying Characters: You can modify characters in a string using 
the subscript operator or the at() member function because C++ strings are mutable.

std::string myString = "Hello";
myString[0] = 'J';        // Modify the first character to 'J' ("Jello")
myString.at(1) = 'i';     // Modify the second character to 'i' ("Jillo")

3.Iterating Through Characters: You can iterate through all 
the characters in a string using a loop, such as a for loop.

std::string my_string = "Hello, world!";

for (int i = 0; i < my_string.length(); i++) {
  std::cout << my_string[i];
}

or;

std::string my_string = "Hello, world!";

for (char c : my_string) {
  std::cout << c;
}


4.Finding Characters: To find a specific character in a string, 
you can use the find() member function,which returns the index of the first 
occurrence of the character, or npos if the character is not found.

std::string text = "Hello, World!";
size_t found = text.find('o');  // Find the first 'o' (index 4)

5.Counting Characters: To count the number of occurrences of a 
specific character in a string, you can use a loop to iterate through 
the string and count the matches.

std::string myString = "Hello, World!";
char target = 'l';
int count = 0;

for (char c : myString) {
    if (c == target) {
        count++;
    }
}

6.Removing Characters: To remove characters from a string, you can use the erase() member function.

std::string text = "Hello, World!";
text.erase(7, 1); // Remove the comma at index 7 ("Hello World!")

7.Inserting Characters: You can insert characters into a string using the insert() member function.

std::string text = "Hello World!";
text.insert(5, ","); // Insert a comma at index 5 ("Hello, World!")

8.Converting Characters: You can convert characters to uppercase or lowercase using the toupper() 
and tolower() functions from the <cctype> header.

char myChar = 'A';
char lowercaseChar = std::tolower(myChar); // Convert 'A' to 'a'
char uppercaseChar = std::toupper(myChar); // Convert 'A' to 'A'

